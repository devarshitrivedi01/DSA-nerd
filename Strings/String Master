//String Programs

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void perm(char[],int);
int fact(int);

int main()
{
    int i,j,x,r,ans,c,length=0;
    long int h;
    int word=0;
    int htb[128]={0};
    char s[1000],s1[1000];
    gets(s);
    printf("\n Enter string if you want some extra two string operations: ");
    gets(s1);
    while(1)
    {
        printf("\n");
        printf("\n Do you want Menu? 1 for yes");
        scanf("%d",&ans);
        if(ans==1)
        {
            printf("\n 1.Display");
            printf("\n 2.Find Length");
            printf("\n 3.Change Case");
            printf("\n 4.Count Words");
            printf("\n 5.Check Validation *If String is invalid then you get o/p*");
            printf("\n 6.Reversing String");
            printf("\n 7.Comparing String");
            printf("\n 8.Palindrome String Checking");
            printf("\n 9.Finding Duplicate in String");
            printf("\n 10.Finding Anagram String");
            printf("\n 11.String Permutations");
            printf("\n 12.Exit");
        }
        printf("\n");
        c:
        printf("\n Enter Your Choice");
        scanf("%d",&c);
        switch(c)
        {
            case 1:
                printf("%s",s);
                break;

            case 2:
                for(i=0;s[i]!='\0';i++)
                {
                    length++;
                }
                printf("\n Length of The String is: %d",length);
                break;

            case 3:
                for(i=0;s[i]!='\0';i++)
                {
                    if(s[i]>=65 && s[i]<=90)
                    {
                        s[i]+=32;
                    }
                    else if(s[i]>='a' && s[i]<=127)
                    {
                        s[i]-=32;
                    }
                }
                printf("%s",s);
                break;

            case 4:
                for(i=0;s[i]!='\0';i++)
                {
                    if(s[i]==' ')
                    {
                        word++;
                    }
                }
                printf("\n Words are %d",word+1);

            case 5:
                for(i=0;s[i]!='\0';i++)
                {
                    if(!(s[i]>=65 && s[i]<=90) || !(s[i]>='a' && s[i]<=127) || !(s[i]>=48 && s[i]<=57))
                    {
                        printf("\n String is Invalid");
                        break;
                    }
                }
                printf("\n String is: %s",s);
                break;

            case 6:
                for(i=0;s[i]!='\0';i++)
                {
                }
                for(j=0,i=i-1;i>=0;j++,i--)
                {
                    s1[j]=s[i];
                }
                s1[j]='\0';
                printf("\n Reversed String is: %s",s1);
                break;

            case 7:
                for(i=0;s[i]!='\0';i++)
                {
                    if(s[i]!=s1[i])
                    {
                        break;
                    }
                }
                if(s[i]==s1[i])
                {
                  printf("\n Equal Strings");
                }
                if(s[i]>s1[i])
                {
                    printf("\n Greater string is: %s",s);
                    printf("\n Lesser string is: %s",s1);
                }
                else
                {
                    printf("\n Greater string is: %s",s1);
                    printf("\n Lesser string is: %s",s);
                }
                break;

            case 8:
                printf("\n Palindrome String is if you reverse the string it remain same \n");
                for(i=0;s[i]!='\0';i++)
                {
                }
                for(j=0,i=i-1;i>=0;j++,i--)
                {
                    s1[j]=s[i];
                }
                s1[j]='\0';
                for(i=0;s[i]!='\0';i++)
                {
                    if(s[i]!=s1[i])
                    {
                        break;
                    }

                }
                if(s[i]==s1[i])
                {
                    printf("\n Strings is Palindrome");
                }
                else
                {
                 printf("\n Strings is not Palindrome");
                }
                break;

            case 9:
                h=0;
                x=0;
                for(i=0;s[i]!='\0';i++)
                {
                    r=0;
                    x=1;
                    if(s[i]>='a' && s[i]<=127)
                    {
                        r=s[i]-97;
                    }
                    else if(s[i]>=65 && s[i]<=90)
                    {
                        r=s[i]-65;
                    }
                    x=x<<r;
                    r=x&h;
                    if(r > 0)
                    {
                        printf("\n %c is Duplicate",s[i]);
                    }
                    else
                    {
                        h=x|h;
                    }
                }
                break;

            case 10:
                printf("\n Anagram Strings are Strings which have same letters");
                printf("\n");
                for(i=0;s[i]!='\0';i++)
                {
                    if(s[i]>='a' && s[i]<=127)
                    {
                        htb[s[i]-97]=htb[s[i]-97]+1;
                    }
                    else if(s[i]>=65 && s[i]<=90)
                    {
                        htb[s[i]-65]=htb[s[i]-65]+1;
                    }
                }
                for(i=0;s1[i]!='\0';i++)
                {
                    if(s1[i]>='a' && s1[i]<=127)
                    {
                        htb[s1[i]-97]=htb[s1[i]-97]-1;
                        if(htb[s1[i]-97]<0)
                        {
                            printf("\n Strings are not Anagram");
                            goto b;
                            break;
                        }
                    }
                    else if(s1[i]>=65 && s1[i]<=90)
                    {
                        htb[s1[i]-65]=htb[s1[i]-65]-1;
                        if(htb[s1[i]-65]<0)
                        {
                            printf("\n Strings are not Anagram");
                            goto b;
                            break;
                        }
                    }
                }
                printf("\n Strings are Anagram");
                b:
                break;

            case 11:
                length=0;
                for(i=0;s[i]!='\0';i++)
                {
                    length++;
                }
                printf("\n number of Permutations is %d and permutations are: ",fact(length));
                printf("\n");
                perm(s,0);
                printf("\n number of Permutations is %d and permutations are: ",fact(length));
                break;

            case 12:
                exit(0);

            default:
                printf("\n Oops ! You entered wrong choice :( Please Try Again");
                goto c;

        }
    }
    return 0;
}

void perm(char s[],int k)
{
    int i;
    static int A[1000]={0};
    static char res[1000];
    if(s[k]=='\0')
    {
        res[k]='\0';
        printf("\n %s",res);
    }
    else
    {
        for(i=0;s[i]!='\0';i++)
        {
            if(A[i]==0)
            {
                res[k]=s[i];
                A[i]=1;
                perm(s,k+1);
                A[i]=0;
            }
        }
    }
}

int fact(int n)
{
    if(n==0||n==1)
    {
        return 1;
    }
    else
    {
        return fact(n-1)*n;
    }
}
